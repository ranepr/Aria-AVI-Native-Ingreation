formatVersion: 1
name: moad-nsx-t-avi-vmware-cloud
version: 1
inputs:
  frontendcount:
    title: "No. of Frontend Workloads:"
    type: integer
    default: 1
    description: Load Balancer will be deployed <br> if Frontend Workload count <br> is >= 2
  environment:
    type: string
    description: Target Environment
    title: Target Environment
    oneOf:
      - title: VCF (VMware Cloud Foundation)
        const: env:dev
  username:
    type: string
    description: The username you would like to have for the installation.
    default: demouser
    title: System Admin Account Username
  password:
    type: string
    description: The password you would like to use for the ocuser account.
    title: OpenCart Admin Account Password
    pattern: "[a-z0-9A-Z@#$]+"
    encrypted: true
  stressThreads:
    type: string
    description: Number of user threads generated to simulate traffic load on the shopping cart website.
    default: "25"
    title: Workload Threads
    minLength: 1
    maxLength: 3
    format: ""
    pattern: "[0-9]{1,3}"
  health_monitor:
    type: array
    items:
      type: string
    title: Health Monitors
    default:
      - System-HTTP
    minItems: 1
    maxItems: 10
  lb_algorithm:
    type: string
    title: Load Balancer Algorithm
    description: The load balancing algorithm will pick a server within the pool's list of available servers.
    readOnly: false
    default: LB_ALGORITHM_LEAST_CONNECTIONS
    oneOf:
      - title: Least Connections
        const: LB_ALGORITHM_LEAST_CONNECTIONS
      - title: Round Robin
        const: LB_ALGORITHM_ROUND_ROBIN
      - title: Fastest Response
        const: LB_ALGORITHM_FASTEST_RESPONSE
      - title: Consistent Hash
        const: LB_ALGORITHM_CONSISTENT_HASH
      - title: Least Load
        const: LB_ALGORITHM_LEAST_LOAD
      - title: Fewest Servers
        const: LB_ALGORITHM_FEWEST_SERVERS
      - title: Random
        const: LB_ALGORITHM_RANDOM
      - title: Fewest Tasks
        const: LB_ALGORITHM_FEWEST_TASKS
      - title: Core Affinity
        const: LB_ALGORITHM_CORE_AFFINITY
resources:
  Avi-Pool:
    type: Idem.AVILB.APPLICATIONS.POOL
    properties:
      name: oc-pool-${uuid()}
      description: Managed by Aria Automation
      account: wlkd-domain-avi
      tier1_lr: /infra/tier-1s/T1-VI1-AVIVIP
      default_server_port: 80
      health_monitor_refs: ${input.health_monitor}
      lb_algorithm: ${input.lb_algorithm}
      application_persistence_profile_ref: System-Persistence-Client-IP
      servers: ${map_to_object(resource.frontend[*].address, "ip", "addr")}
  Avi-VirtualService:
    type: Idem.AVILB.APPLICATIONS.VIRTUAL_SERVICE
    properties:
      name: oc-vs-${uuid()}
      description: Managed by Aria Assembler
      account: wlkd-domain-avi
      cloud_type: CLOUD_VCENTER
      services:
        - port: "80"
      pool_ref: ${resource["Avi-Pool"].name}
      vsvip_ref: ${resource["Avi-VIP"].name}
  OC-Apache-Cloud-Sec-Grp:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      rules:
        - name: oc-web-fw-http
          ports: 80
          direction: inbound
          protocol: TCP
          source: ANY
          access: Allow
        - name: oc-web-fw-ssh
          ports: 22
          direction: inbound
          protocol: TCP
          source: ANY
          access: Allow
  OC-MySQL-Cloud-Sec-Grp:
    type: Cloud.SecurityGroup
    properties:
      securityGroupType: new
      rules:
        - name: oc-db-fw-mysql
          ports: "3306"
          access: Allow
          source: ${resource["OC-Apache-Cloud-Sec-Grp"].id}
          protocol: TCP
          direction: inbound
        - name: oc-db-fw-ssh
          access: Allow
          source: ANY
          service: SSH
          direction: inbound
  Avi-VIP:
    type: Idem.AVILB.APPLICATIONS.VS_VIP
    dependsOn:
      - Data-Cloud-Seg
    properties:
      name: oc-vip-${uuid()}
      description: Managed by Aria Automation
      account: wlkd-domain-avi
      tier1_lr: /infra/tier-1s/T1-VI1-AVIVIP
      vip:
        - vip_id: 0
          auto_allocate_ip: true
          ipam_network_subnet:
            network_ref: ${resource.Data-Cloud-Seg.resourceName}
  frontend:
    type: Cloud.Machine
    dependsOn:
      - mysql
    properties:
      name: oc-web
      flavor: medium
      count: ${input.frontendcount}
      #image: moad-nsx-t
      imageRef: https://cloud-images.ubuntu.com/releases/18.04/release/ubuntu-18.04-server-cloudimg-amd64.ova
      networks:
        - network: ${resource["Web-Cloud-Seg"].id}
          assignment: static
          securityGroups:
            - ${resource["OC-Apache-Cloud-Sec-Grp"].id}
      cloudConfig: |
        #repo_update: true
        #repo_upgrade: all
        #package_reboot_if_required: true
        package_update: true
        package_upgrade: true
        package_reboot_if_required: true
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - apache2
          - php
          - php-mysql
          - libapache2-mod-php
          - php-cli
          - php-common
          - php-intl
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
          - php-curl
          - php-xmlrpc
          - mysql-server-5.7
          - unzip


        ssh_pwauth: yes

        users:
          - default
          - name: ${input.username}
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash
          
          - name: ocuser
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash

        chpasswd:
          users:
            - name: ${input.username}
              password: ${input.password}
              type: text
          expire: false

        write_files:
          - path: /etc/cron.hourly/oc_web_cleanup
            owner: root
            permissions: '0777'
            content: "mysql -u ocuser -h ${resource.mysql.address} -e 'source /var/www/opencart/install/opencart.sql'"
            
          - path: /etc/hosts
            content: 127.0.0.1 ${self.resourceName}
            append: true

        runcmd:
          - systemctl restart apache2
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          - git clone https://github.com/mcclanc/opencart-demo.git /tmp/opencart
          - mv /tmp/opencart /var/www/
          - chown -R www-data.www-data /var/www/opencart
          - chmod -R 775 /var/www/opencart
          - tee /etc/apache2/sites-available/opencart.conf > /dev/null << EOF
          - <VirtualHost *:80>
          -   ServerName www.opencart.cmbu.local
          -   DocumentRoot /var/www/opencart
          -   <Directory /var/www/opencart/>
          -     AllowOverride All
          -     allow from all
          -   </Directory>
          - </VirtualHost>
          - EOF
          - cd /etc/apache2/sites-available/
          - a2ensite opencart.conf
          - a2dissite 000-default.conf
          - systemctl reload apache2
          - systemctl restart apache2
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf

            #----------------------- Set Website IP Address -----------------------#
          - export cloudip=$(curl http://checkip.amazonaws.com/)
          - export onpremip=$(ip route get 8.8.8.8 | awk -F"src " 'NR==1{split($2,a," ");print a[1]}')
          - export mysqlip=${resource.mysql.networks[0].address}
          - export ip4=$onpremip
            #----------------------------------------------------------------------#

          - mysql -u $USER -h $mysqlip -e 'source /var/www/opencart/install/opencart.sql'
          - mysql -u $USER -h $mysqlip -e "INSERT INTO oc_user (user_id,user_group_id,username,password,salt,firstname,lastname,email,image,code,ip,status,date_added) VALUES (1,1,'admin','5feaa046f6927df3d744007ec1491dba838f672e','c4wnfrq9J','demo','user','admin@admin.com','none','none','none',1,'2019-01-31 06:29:09')" opencart
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/config.php
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/admin/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/admin/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/admin/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/admin/config.php
          - systemctl reload apache2
          - systemctl restart apache2

            #----------------------- Install Aria Logs Agent  -------------------------#
          - cd /tmp
          - wget http://10.176.192.74/download/vmware-log-insight-agent_8.14.0-22552671_all.deb
          - dpkg -i vmware-log-insight-agent_8.14.0-22552671_all.deb
          - export logs_ip=${input.environment == "env:vcf" ? "vcf-fd-logs-vip.cmbu.local" : "LOGINSIGHT"}
          - sed -i "s/;hostname=OPERATIONS_FOR_LOGS/hostname=$logs_ip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd
          - systemctl enable liagentd
            #----------------------------------------------------------------------#

          - echo "ocuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.environment}
  mysql:
    type: Cloud.Machine
    properties:
      name: oc-db
      flavor: medium
      #image: moad-nsx-t
      imageRef: https://cloud-images.ubuntu.com/releases/18.04/release/ubuntu-18.04-server-cloudimg-amd64.ova
      networks:
        - network: ${resource["DB-Cloud-Seg"].id}
          assignment: static
          securityGroups:
            - ${resource["OC-MySQL-Cloud-Sec-Grp"].id}
      cloudConfig: |
        repo_update: true
        repo_upgrade: all
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted

        packages:
          - mysql-server-5.7
          - mysql-client
          - unzip

        ssh_pwauth: yes

        users:
          - default
          - name: ${input.username}
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash
          
          - name: ocuser
            lock_passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            groups: wheel, sudo, admin
            shell: /bin/bash

        chpasswd:
          users:
            - name: ${input.username}
              password: ${input.password}
              type: text
          expire: false

        write_files:
          - path: /etc/cron.hourly/oc_cleanup
            owner: root
            permissions: '0777'
            content: "mysql -e 'use opencart; create table oc_session_copy like oc_session; drop table oc_session; rename table oc_session_copy to oc_session;'"
          - path: /etc/hosts
            content: 127.0.0.1 ${self.name}
            append: true

        runcmd:
          - export DEBIAN_FRONTEND=noninteractive
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          - echo "mysql-server-5.7 mysql-server/root_password password root" | sudo debconf-set-selections
          - echo "mysql-server-5.7 mysql-server/root_password_again password root" | sudo debconf-set-selections
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#slow/slow/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/#long_query_time/long_query_time/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - sed -i 's/bind-address/#bind-address/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - systemctl restart mysql
          - mysql -u root -e "GRANT ALL ON *.* TO '$USER'@'%' IDENTIFIED BY '$PASS'"
          - mysql -u root -e 'CREATE DATABASE opencart'
          - mysql -u root -e 'USE opencart'
          - mysql -u root -e 'flush privileges'

            #----------------------- Install Aria Logs Agent  -------------------------#
          - cd /tmp
          - wget http://10.176.192.74/download/vmware-log-insight-agent_8.14.0-22552671_all.deb
          - dpkg -i vmware-log-insight-agent_8.14.0-22552671_all.deb
          - export logs_ip=${input.environment == "env:vcf" ? "vcf-fd-logs-vip.cmbu.local" : "LOGINSIGHT"}
          - sed -i "s/;hostname=OPERATIONS_FOR_LOGS/hostname=$logs_ip/g" /var/lib/loginsight-agent/liagent.ini
          - sed -i "s/;ssl=yes/ssl=no/g" /var/lib/loginsight-agent/liagent.ini
          - systemctl restart liagentd
          - systemctl enable liagentd
            #----------------------------------------------------------------------#

          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: ${input.environment}
  loadGen:
    type: Cloud.Machine
    properties:
      name: oc-lg
      #image: moad-nsx-t
      imageRef: https://cloud-images.ubuntu.com/releases/18.04/release/ubuntu-18.04-server-cloudimg-amd64.ova
      flavor: Large
      cloudConfig: |
        users:
          - name: ${input.username}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: svcacct
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
            passwd: $iAuePVH.5tvGaDYf$bwDqfVz25TTYnZCGOWiPLAhczM.VJEmlEQizdOqnynfhZlaNERXkxBcJxtAJAOJuWn5gxftsyteU7cuQ9VV1/1
        write_files:
          - path: /etc/hosts
            content: 127.0.0.1 ${self.resourceName}
            append: true       
          - path: /etc/sudoers.d/sudo-me
            content: cas-demo ALL=(ALL) NOPASSWD:ALL

        packages:
            default-jre
        runcmd:
          - USER=ocuser
          - PASS=${input.password}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - export LOAD=${input.stressThreads}
          - export JAVA_HOME=
          - echo ${input.username}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload
          - hostnamectl set-hostname ${self.resourceName}
          
            #----------------------- Set LoadGen IP Address -----------------------#
          - export lbIP=${resource.Avi-VIP.ip_address.addr[0]}
          - export frontendIP=${resource.frontend.networks[0].address[0]}
          - export ipAddress=${input.frontendcount >= 2 ? "$lbIP":"$frontendIP"}
            #----------------------------------------------------------------------#
          
          - sudo mkdir /usr/jmeter
          - cd /usr/jmeter
          - sudo wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/apache-jmeter-5.2.1.tgz
          - sudo tar -xvzf apache-jmeter-5.2.1.tgz
          - cd apache-jmeter-5.2.1/bin/templates
          - sudo wget https://cmbutmmcwagent.s3-us-west-1.amazonaws.com/ImprovedShoppingCart.jmx
          - sudo sed -i "s/10.176.150.78/$ipAddress/g" /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx
          - sudo sed -i "s/num_threads\">150/num_threads\">$LOAD/g" /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx
          - sudo nohup /usr/jmeter/apache-jmeter-5.2.1/bin/jmeter -j /var/log/jmeter.log -n -t /usr/jmeter/apache-jmeter-5.2.1/bin/templates/ImprovedShoppingCart.jmx &
      constraints:
        - tag: ${input.environment}
      networks:
        - network: ${resource["Data-Cloud-Seg"].id}
          assignment: static
  Data-Cloud-Seg:
    type: Cloud.NSX.Network
    properties:
      networkType: existing
      constraints:
        - tag: net:avi
  Web-Cloud-Seg:
    type: Cloud.NSX.Network
    properties:
      name: oc-web-net
      networkType: routed
      constraints:
        - tag: env:moad-nsx-web
  DB-Cloud-Seg:
    type: Cloud.NSX.Network
    properties:
      name: oc-db-net
      networkType: routed
      constraints:
        - tag: env:moad-nsx-db
